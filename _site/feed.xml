<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Varsha Verma</title>
    <description>Welcome to my sanctuary of thoughts.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>XML Analysis of Libvirt Storage Pools</title>
        <description>&lt;p&gt;While preparing for my first patch to the sushy-tools repository, I was required to do an in-depth analysis of how Libvirt provides storage managment on the physical host, the different ways of configuring a physical storage device to be used by a domain/guest/Virtual Machine and how these devices are finally reflected in the respective domain XML.&lt;/p&gt;

&lt;p&gt;According to the official Libvirt documentation &lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;,&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Libvirt provides storage management on the physical host through storage pools and volumes. A storage pool is a quantity of storage set aside by an administrator, often a dedicated storage administrator, for use by virtual machines. Storage pools are divided into storage volumes either by the storage administrator or the system administrator, and the volumes are assigned to VMs as block devices.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This post will be talking about three different types of Libvirt storage pools (Directory, Filesystem and Disk Storage), primarily focussed towards how the devices configured through these pools are finally manifested in the domain XML to which they are attached.&lt;/p&gt;

&lt;p&gt;On a sidenote, I used &lt;em&gt;virt-manager&lt;/em&gt; which provides a user-friendly GUI for interacting with the libvirt virtual machines for creating the storage pools and volumes &lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; and also for attaching those volumes to different libvirt VMs &lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h2 id=&quot;directory-pool&quot;&gt;Directory Pool&lt;/h2&gt;
&lt;p&gt;This is a pool with type &lt;em&gt;dir&lt;/em&gt; and provides the means to manage files within a folder/directory. On the virt-manager, I configured it by providing one of the folders on my m/c as the source for the pool and created a raw storage volume within it of type &lt;em&gt;img&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I configured a Directory pool called &lt;em&gt;testPool&lt;/em&gt; and a storage volume called &lt;em&gt;testVol1.img&lt;/em&gt; which was attached to a VM called &lt;em&gt;varshaVM1&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Output for &lt;code class=&quot;highlighter-rouge&quot;&gt;virsh pool-dumpxml testPool&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;pool&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'dir'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;testPool&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;uuid&amp;gt;&lt;/span&gt;05f3950a-95c2-49f7-bb45-0a91296e443a&lt;span class=&quot;nt&quot;&gt;&amp;lt;/uuid&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;capacity&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unit=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bytes'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;164161908736&lt;span class=&quot;nt&quot;&gt;&amp;lt;/capacity&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;allocation&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unit=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bytes'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;139271409664&lt;span class=&quot;nt&quot;&gt;&amp;lt;/allocation&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;available&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unit=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bytes'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;24890499072&lt;span class=&quot;nt&quot;&gt;&amp;lt;/available&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/source&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;target&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&amp;gt;&lt;/span&gt;/home/varsha/Documents/testPool&lt;span class=&quot;nt&quot;&gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;permissions&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;mode&amp;gt;&lt;/span&gt;0755&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mode&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;owner&amp;gt;&lt;/span&gt;1000&lt;span class=&quot;nt&quot;&gt;&amp;lt;/owner&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;group&amp;gt;&lt;/span&gt;1000&lt;span class=&quot;nt&quot;&gt;&amp;lt;/group&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/permissions&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/target&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/pool&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Output for &lt;code class=&quot;highlighter-rouge&quot;&gt;virsh vol-dumpxml testVol1.img --pool testPool&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;volume&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'file'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;testVol1.img&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;/home/varsha/Documents/testPool/testVol1.img&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/source&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;capacity&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unit=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bytes'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;3221225472&lt;span class=&quot;nt&quot;&gt;&amp;lt;/capacity&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;allocation&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unit=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bytes'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;3221229568&lt;span class=&quot;nt&quot;&gt;&amp;lt;/allocation&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;physical&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unit=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bytes'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;3221225472&lt;span class=&quot;nt&quot;&gt;&amp;lt;/physical&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;target&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&amp;gt;&lt;/span&gt;/home/varsha/Documents/testPool/testVol1.img&lt;span class=&quot;nt&quot;&gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;format&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'raw'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;permissions&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;mode&amp;gt;&lt;/span&gt;0600&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mode&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;owner&amp;gt;&lt;/span&gt;0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/owner&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;group&amp;gt;&lt;/span&gt;0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/group&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/permissions&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;timestamps&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;atime&amp;gt;&lt;/span&gt;1561032566.367096192&lt;span class=&quot;nt&quot;&gt;&amp;lt;/atime&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;mtime&amp;gt;&lt;/span&gt;1560768344.450720961&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mtime&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;ctime&amp;gt;&lt;/span&gt;1561029730.460979027&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ctime&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/timestamps&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/target&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/volume&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And finally, this volume was manifested on the domain xml of &lt;em&gt;varshaVM1&lt;/em&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;virsh dumpxml varshaVM1&lt;/code&gt;) as follows:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;devices&amp;gt;&lt;/span&gt;
...
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;disk&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'volume'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;device=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'disk'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;driver&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'qemu'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'raw'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pool=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'testPool'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;volume=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'testVol1.img'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;target&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dev=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'vdb'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;bus=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'virtio'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;address&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'pci'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;domain=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'0x0000'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;bus=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'0x00'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;slot=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'0x09'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;function=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'0x0'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/disk&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/devices&amp;gt;&lt;/span&gt;
...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;filesystem-pool&quot;&gt;Filesystem Pool&lt;/h2&gt;
&lt;p&gt;This is a pool of type &lt;em&gt;fs&lt;/em&gt; and is more or less similar to a directory pool. In a filesystem pool, instead of a directory, a source block device will be mounted and files will be managed in the directory of it’s mount point. I formatted my 32GB pen drive and created a single partition for it to act as a block device for configuring a filesystem pool and created raw volumes just as done in the directory pool. &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/sdb1&lt;/code&gt; was used as a source for the pool.&lt;/p&gt;

&lt;p&gt;I configured a pool called &lt;em&gt;fsPool&lt;/em&gt; and a raw storage volume called &lt;em&gt;fsVol.qcow2&lt;/em&gt; which was attached to a VM called &lt;em&gt;varshaVM1&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The output for &lt;code class=&quot;highlighter-rouge&quot;&gt;virsh pool-dumpxml fsPool&lt;/code&gt; was:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;pool&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'fs'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;fsPool&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;uuid&amp;gt;&lt;/span&gt;42a601bc-a563-4dc9-b42b-c0fc0f0f9839&lt;span class=&quot;nt&quot;&gt;&amp;lt;/uuid&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;capacity&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unit=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bytes'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;31440814080&lt;span class=&quot;nt&quot;&gt;&amp;lt;/capacity&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;allocation&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unit=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bytes'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;16384&lt;span class=&quot;nt&quot;&gt;&amp;lt;/allocation&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;available&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unit=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bytes'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;31440797696&lt;span class=&quot;nt&quot;&gt;&amp;lt;/available&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;device&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/dev/sdb1'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;format&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'auto'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/source&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;target&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&amp;gt;&lt;/span&gt;/var/lib/libvirt/images/fsPool&lt;span class=&quot;nt&quot;&gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;permissions&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;mode&amp;gt;&lt;/span&gt;0755&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mode&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;owner&amp;gt;&lt;/span&gt;1000&lt;span class=&quot;nt&quot;&gt;&amp;lt;/owner&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;group&amp;gt;&lt;/span&gt;1000&lt;span class=&quot;nt&quot;&gt;&amp;lt;/group&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/permissions&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/target&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/pool&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The output for &lt;code class=&quot;highlighter-rouge&quot;&gt;virsh vol-dumpxml fsVol.qcow2 --pool fsPool&lt;/code&gt; was:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;volume&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'file'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;fsVol.qcow2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;/var/lib/libvirt/images/fsPool/fsVol.qcow2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/source&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;capacity&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unit=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bytes'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;2147483648&lt;span class=&quot;nt&quot;&gt;&amp;lt;/capacity&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;allocation&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unit=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bytes'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;2148073472&lt;span class=&quot;nt&quot;&gt;&amp;lt;/allocation&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;physical&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unit=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bytes'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;2148073472&lt;span class=&quot;nt&quot;&gt;&amp;lt;/physical&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;target&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&amp;gt;&lt;/span&gt;/var/lib/libvirt/images/fsPool/fsVol.qcow2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;format&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'qcow2'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;permissions&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;mode&amp;gt;&lt;/span&gt;0644&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mode&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;owner&amp;gt;&lt;/span&gt;1000&lt;span class=&quot;nt&quot;&gt;&amp;lt;/owner&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;group&amp;gt;&lt;/span&gt;1000&lt;span class=&quot;nt&quot;&gt;&amp;lt;/group&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/permissions&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;timestamps&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;atime&amp;gt;&lt;/span&gt;1561055113&lt;span class=&quot;nt&quot;&gt;&amp;lt;/atime&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;mtime&amp;gt;&lt;/span&gt;1561055029&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mtime&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;ctime&amp;gt;&lt;/span&gt;1561055112&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ctime&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/timestamps&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;compat&amp;gt;&lt;/span&gt;1.1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/compat&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;features&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;lazy_refcounts/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/features&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/target&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/volume&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And finally, the attached volume manifested itself in the domain XML (&lt;code class=&quot;highlighter-rouge&quot;&gt;virsh dumpxml varshaVM1&lt;/code&gt;) as:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;device&amp;gt;&lt;/span&gt;
  ...
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;disk&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'file'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;device=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'disk'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;driver&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'qemu'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'qcow2'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;file=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/var/lib/libvirt/images/fsPool/fsVol.qcow2'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;target&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dev=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'vdd'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;bus=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'virtio'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;address&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'pci'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;domain=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'0x0000'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;bus=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'0x00'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;slot=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'0x0b'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;function=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'0x0'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/disk&amp;gt;&lt;/span&gt;
  ...
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/device&amp;gt;&lt;/span&gt;
...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;disk-pool&quot;&gt;Disk Pool&lt;/h2&gt;
&lt;p&gt;This is a pool of type &lt;em&gt;disk&lt;/em&gt; and provides a pool based on a physical disk where volumes are created by adding partitions to the disk. Since I needed a physical storage device to implement a disk pool, I formatted my 32GB pen drive and created partitions on it using &lt;em&gt;fdisk&lt;/em&gt;. The physical device was found at &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/sdb&lt;/code&gt; and the partitions were found at &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/sdb1&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/sdb2&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/sdb3&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I configured a Disk pool called &lt;em&gt;DiskPool&lt;/em&gt; and the automatically configured volumes were &lt;em&gt;sdb1&lt;/em&gt;, &lt;em&gt;sdb2&lt;/em&gt; and &lt;em&gt;sdb3&lt;/em&gt;. I attached the volume &lt;em&gt;sdb1&lt;/em&gt; to a VM called &lt;em&gt;varshaVM1&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The output for &lt;code class=&quot;highlighter-rouge&quot;&gt;virsh pool-dumpxml DiskPool&lt;/code&gt; was:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;pool&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'disk'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;DiskPool&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;uuid&amp;gt;&lt;/span&gt;0b60b9b2-7040-43f2-b3fb-880f422ff33b&lt;span class=&quot;nt&quot;&gt;&amp;lt;/uuid&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;capacity&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unit=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bytes'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;31453470720&lt;span class=&quot;nt&quot;&gt;&amp;lt;/capacity&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;allocation&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unit=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bytes'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;5368709120&lt;span class=&quot;nt&quot;&gt;&amp;lt;/allocation&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;available&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unit=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bytes'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;26084697088&lt;span class=&quot;nt&quot;&gt;&amp;lt;/available&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;device&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/dev/sdb'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;freeExtent&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;start=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'32256'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;end=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'1048576'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;freeExtent&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;start=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'1080832'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;end=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'2148532224'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;freeExtent&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;start=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'7517241344'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;end=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'31453470720'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/device&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;format&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'dos'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/source&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;target&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&amp;gt;&lt;/span&gt;/dev&lt;span class=&quot;nt&quot;&gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/target&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/pool&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The output for &lt;code class=&quot;highlighter-rouge&quot;&gt;virsh vol-dumpxml sdb1 --pool DiskPool&lt;/code&gt; was:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;volume&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'block'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;sdb1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;/dev/sdb1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;device&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/dev/sdb'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;extent&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;start=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'1048576'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;end=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'2148532224'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/device&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/source&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;capacity&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unit=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bytes'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;2147483648&lt;span class=&quot;nt&quot;&gt;&amp;lt;/capacity&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;allocation&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unit=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bytes'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/allocation&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;physical&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unit=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bytes'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;1024&lt;span class=&quot;nt&quot;&gt;&amp;lt;/physical&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;target&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&amp;gt;&lt;/span&gt;/dev/sdb1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;format&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'none'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;permissions&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;mode&amp;gt;&lt;/span&gt;0660&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mode&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;owner&amp;gt;&lt;/span&gt;0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/owner&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;group&amp;gt;&lt;/span&gt;6&lt;span class=&quot;nt&quot;&gt;&amp;lt;/group&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/permissions&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;timestamps&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;atime&amp;gt;&lt;/span&gt;1561032530.604694882&lt;span class=&quot;nt&quot;&gt;&amp;lt;/atime&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;mtime&amp;gt;&lt;/span&gt;1561032530.604694882&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mtime&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;ctime&amp;gt;&lt;/span&gt;1561032530.604694882&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ctime&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/timestamps&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/target&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/volume&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And finally, the attached partition &lt;code class=&quot;highlighter-rouge&quot;&gt;sdb1&lt;/code&gt; was manifested in the &lt;em&gt;varshaVM1&lt;/em&gt; domain XML (&lt;code class=&quot;highlighter-rouge&quot;&gt;virsh dumpxml varshaVM1&lt;/code&gt;) as below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;devices&amp;gt;&lt;/span&gt;
...
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;disk&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'block'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;device=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'disk'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;driver&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'qemu'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'raw'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cache=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'none'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;io=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'native'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dev=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/dev/sdb1'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;target&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dev=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'vdc'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;bus=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'virtio'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;address&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'pci'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;domain=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'0x0000'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;bus=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'0x00'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;slot=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'0x0a'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;function=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'0x0'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/disk&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/devices&amp;gt;&lt;/span&gt;
...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;All the XML descriptions for the various pools and volumes comply with what should actually come up for the stated types. The main reason I decided to document this is because I read multiple blogs but nowhere could I find a plausible explanation as to how the volumes attached to a VM manifests itself in the domain XML. This is something which might be of use in cases where one is trying to find out what all volumes are attached to a particular VM/domain.&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Libvirt Storage Management Official Documentation - &lt;a href=&quot;https://libvirt.org/storage.html&quot;&gt;https://libvirt.org/storage.html&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;Manage KVM Storage Pools and Volumes - &lt;a href=&quot;https://www.tecmint.com/manage-kvm-storage-volumes-and-pools/&quot;&gt;https://www.tecmint.com/manage-kvm-storage-volumes-and-pools/&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;Adding volumes to KVM Virtual Machines - &lt;a href=&quot;https://unix.stackexchange.com/questions/92967/how-to-add-extra-disks-on-kvm-based-vm&quot;&gt;https://unix.stackexchange.com/questions/92967/how-to-add-extra-disks-on-kvm-based-vm&lt;/a&gt; &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 20 Jun 2019 17:51:00 +0530</pubDate>
        <link>http://localhost:4000/outreachy/openstack/2019/06/20/libvirt-pool-analysis/</link>
        <guid isPermaLink="true">http://localhost:4000/outreachy/openstack/2019/06/20/libvirt-pool-analysis/</guid>
      </item>
    
      <item>
        <title>Outreachy | A Quick Dissection of my project at Openstack Ironic</title>
        <description>&lt;p&gt;It’s only been three weeks since I embarked on my Outreachy internship at Openstack and I already feel like my brain has evolved so much in terms of the tremendous amount of learning that has taken place the past few weeks. This post is aimed at sharing some of that knowledge with my fellow readers.&lt;/p&gt;

&lt;p&gt;Before we begin, let me give you a small introduction to the organization that I am working with: &lt;span class=&quot;red&quot;&gt;&lt;strong&gt;Openstack&lt;/strong&gt;&lt;/span&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;OpenStack is a set of open source, scalable software tools for building and managing cloud computing platforms for public and private clouds. OpenStack is managed by the OpenStack Foundation, a non-profit that oversees both development and community-building around the project.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are many teams working on different projects under the banner of Openstack, one of which is &lt;span class=&quot;red&quot;&gt;&lt;strong&gt;Ironic&lt;/strong&gt;&lt;/span&gt;. &lt;ins&gt;Openstack Ironic is a set of projects that perform bare metal (no underlying hypervisor) provisioning&lt;/ins&gt; in use cases where a virtualized environment might be inappropriate and a user would perfer to have an actual, physical, bare-metal server. Thus, bare metal provisioning means a customer can use hardware directly, deploying the workload (image) onto a real physical machine instead of a virtualized instance on a hypervisor.&lt;/p&gt;

&lt;p&gt;The title for the project that I am working on is:&lt;/p&gt;

&lt;h3 id=&quot;extend-sushy-to-support-raid&quot;&gt;“Extend sushy to support RAID”&lt;/h3&gt;

&lt;p&gt;Reading the topic, the first word that easily catches one’s attention is &lt;span class=&quot;red&quot;&gt;&lt;strong&gt;RAID&lt;/strong&gt;&lt;/span&gt;. RAID is an acronym for &lt;em&gt;Redundant Array of Independent Disks&lt;/em&gt;. It is &lt;ins&gt;a technique of storing the same data in different places on multiple disks instead of a  single disk for increased I/O performance, data storage reliability or both.&lt;/ins&gt; There are different RAID levels that use a mix/match of striping, parity or mirroring, each optimized for a specific situation.&lt;/p&gt;

&lt;p&gt;&lt;ins&gt;The main theme behind the existence of Ironic is to allow it’s users (mostly system administrators) to access the hardware, running their servers, remotely.&lt;/ins&gt; This gives them the ability to manage/control the servers 24X7 which is crucial in case of any server failures at odd hours. This is where &lt;span class=&quot;red&quot;&gt;&lt;em&gt;Baseboard Management Controller (BMC)&lt;/em&gt;&lt;/span&gt; comes to the rescue. It is an independent satellite computer that can typically be a system-on-chip microprocessor or a standalone computer. It is used to perform system monitoring and management related tasks.&lt;/p&gt;

&lt;p&gt;At the heart of a BMC lies &lt;span class=&quot;red&quot;&gt;&lt;strong&gt;Redfish&lt;/strong&gt;&lt;/span&gt;, which is a Protocol used by the BMC (on bare metal machines) to communicate remotely via JSON and OData. It is a standard RESTful API offered by DMTF to get and set hardware configuration items on physical platforms.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;red&quot;&gt;&lt;strong&gt;Sushy&lt;/strong&gt;&lt;/span&gt; is a &lt;ins&gt;client side Python library used by Ironic to communicate with Redfish based systems.&lt;/ins&gt;&lt;/p&gt;

&lt;p&gt;To test and support the development of the &lt;code class=&quot;highlighter-rouge&quot;&gt;sushy&lt;/code&gt; library, a set of simple simulation tools called &lt;span class=&quot;red&quot;&gt;&lt;strong&gt;sushy-tools&lt;/strong&gt;&lt;/span&gt; is used, since it is not always possible to have an actual bare metal machine with Redfish at hand. The package offers two emulators, a &lt;em&gt;static emulator&lt;/em&gt; and a &lt;em&gt;dynamic emulator&lt;/em&gt;. The &lt;span class=&quot;red&quot;&gt;&lt;em&gt;static emulator&lt;/em&gt;&lt;/span&gt; simulates a read only BMC and is a simple REST API server that responds the same things to client queries. The &lt;span class=&quot;red&quot;&gt;&lt;em&gt;dynamic emulator&lt;/em&gt;&lt;/span&gt; simulates the BMC of a Redfish bare metal machine and is used to manage libvirt VMs (mimicking actual bare metal machines), resembling how a real Redfish BMC manages actual bare metal machine instances. Like it’s counterpart, the dynamic emulator also exposes REST API endpoints that can be consumed by a client using the sushy library.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20443665/59162360-42057380-8b0d-11e9-8634-d0bf9b5b2106.png&quot; alt=&quot;SushyDiagram&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Thus, the aim of my project is &lt;ins&gt;to add functionality to the existing sushy library so that the clients are able to configure RAID based volumes for storage on their bare metal instances remotely.&lt;/ins&gt; There are two aspects to this project, one is the addition of code in the sushy library and the other is adding support for emulating the storage subsystem in sushy-tools so that we are actually able to test the added functionality in sushy against something. Since there is already one contributor working on adding RAID implementation to sushy, my task in the project involves adding the RAID support for emulation to the sushy-tools dynamic emulator (more specifically the libvirt driver).&lt;/p&gt;

&lt;h4 id=&quot;challenges-faced-till-now&quot;&gt;Challenges faced till now&lt;/h4&gt;

&lt;p&gt;The first task that the mentors asked me to do was to learn how to get/receive data from the libvirt VMs using sushy via the sushy-tools dynamic emulator. Honestly, the task did feel a bit intimidating to me in the beginning. I had to go back to the networking basics and brush them up. After that, I spent quite some time reading blogs and following videos on libvirt VMs. I encountered some problems while setting up/creating the VMs using the virt-install command and had to ultimately fall back to the virt-manager GUI to spin up the VMs.&lt;/p&gt;

&lt;p&gt;I also wasn’t able to set up the local development environment for sushy-tools due to the absence of instructions for the same on the README. I have to admit that I thought ‘maybe the instructions aren’t mentioned because they are too obvious’ and felt a bit embarrased about them not being obvious to me. But then, I reminded myself that I am here to learn and grow so I went ahead and asked my mentor about the same who very warmly helped me out with the commands to be used for setting up the repository. After successfully setting up the environment, I even submitted a patch for adding the corresponding instructions to the docs so as to make it a bit easier for new-comers like me to start contributing to the project.&lt;/p&gt;

&lt;p&gt;While working the first task, I came across some anomalies in the behaviour of the dynamic emulator which led me to digging up the code to find out what was happening. I ultimately found out that it was actually a bug and submitted a patch for the same.&lt;/p&gt;

&lt;p&gt;Right now, I am working on exposing the Volume API in the dynamic emulator. There are a lot of decisions that are to be made, related to the mapping of the sushy storage resources to the libvirt VMs. I have been researching about them and am regularly having discussions with the mentors on the same and will hopefully include the final implementational mappings in my next blog post.&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Jun 2019 12:54:00 +0530</pubDate>
        <link>http://localhost:4000/outreachy/openstack/2019/06/09/about-outreachy-project/</link>
        <guid isPermaLink="true">http://localhost:4000/outreachy/openstack/2019/06/09/about-outreachy-project/</guid>
      </item>
    
      <item>
        <title>A beginner's journey to Outreachy at Openstack</title>
        <description>&lt;p&gt;This is the first blog post that I have ever written in the history of the universe! \o/ (Much elation)&lt;/p&gt;

&lt;p&gt;I had been procrastinating on starting a blog for quite some time now. Thanks to Outreachy, I got the final push to do it.&lt;/p&gt;

&lt;p&gt;Before I begin, I would like to announce that I landed the Outreachy internship at Openstack a few weeks ago. I will be working with their Team Ironic this summer on the project ‘Extend sushy to support RAID for Redfish’.&lt;/p&gt;

&lt;p&gt;First, a bit background:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Outreachy provides paid internships to work in Free and Open Source Software (FOSS) and is open to applicants all around the world. Interns work remotely with experienced mentors from FOSS communities and the projects may include programming, user experience, documentation, illustration, graphical design or data science.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I came to know about Outreachy two years ago via twitter. I made my first contribution to open source because of Outreachy when I tried applying for the winter round in 2017 (had to back out due to some eligibility issues). Honestly, I got a bit dejected back then but now, when I look back, I can see how the sole experience of just applying and contributing transformed me. It was because I tried applying to Outreachy that I was introduced to this vast world of FOSS. I learnt so much about git, CI testing, coverage and communicating across timezones. Contributing to open source gave me the feeling that I am a part of something much bigger than my own self. And it got me so hooked that I could not stop after that and kept on exploring and contributing to the repositories of different organizations in bits and pieces.&lt;/p&gt;

&lt;p&gt;I again decided to apply for Outreachy this year for the summer round. When the applications opened in February, I browsed through the list of projects and shortlisted the ones which matched with the tech stack that I was acquanited/comfortable with and the level of skill that was required. I was more inclined to work on projects involving cloud computing and distributed systems since it was something that had been intriguing me for the past few months and hence, I was very eager to learn more about it. Going ahead, I read Openstack’s project description and the details about the work to be done during the internship and honestly, I could not understand most of what was stated there. Because it sounded so challenging in my head, I knew that this project will offer me a lot to learn and so, I took the opportunity. I prepared myself for a lot of reading, watching videos and googling ahead.&lt;/p&gt;

&lt;h3 id=&quot;irc&quot;&gt;IRC&lt;/h3&gt;
&lt;p&gt;As mentioned in the project description, I looked up the IRC channel and started lurking on their #openstack-ironic channel for the days to come. For registering my nick to access the channel, I found the &lt;a href=&quot;https://freenode.net/kb/answer/registration&quot;&gt;link&lt;/a&gt; quite helpful. One can even read the past IRC logs of the channel &lt;a href=&quot;http://eavesdrop.openstack.org/irclogs/%23openstack-ironic/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;some-research&quot;&gt;Some research&lt;/h3&gt;
&lt;p&gt;Next up, I started with googling every word that I did not understand in the project description and reading all the related documentation about the project that I could manage to find. I even watched some videos/webcasts&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; which were quite helpful.&lt;/p&gt;

&lt;h3 id=&quot;project-setup-and-exploring-bugs&quot;&gt;Project setup and exploring bugs&lt;/h3&gt;
&lt;p&gt;Openstack uses gerrit for their code review processes. The docs&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; for setting it up were quite straightforward and easy to follow. The bugs are recorded on the &lt;a href=&quot;http://storyboard.openstack.org/&quot;&gt;storyboard&lt;/a&gt;. We were advised to look up for the outreachy tagged stories.&lt;/p&gt;

&lt;h3 id=&quot;first-patch&quot;&gt;First patch&lt;/h3&gt;
&lt;p&gt;After setting up the sushy code base on my machine, I started fiddling with the code and exploring it to get a bit overview of how things were happening. While going through the code, I came across a &lt;code class=&quot;highlighter-rouge&quot;&gt;todo&lt;/code&gt; that sounded quite easy to me and so, I went ahead by submitting a story and a patch for it via git-review. I learnt a lot of things while making my first contribution in regards to the tox tests that need to be run locally before submitting the patch, the 80-character line limit, adding a release note&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; and pointers regarding how to communicate effectively on the patch.
The Ironic community members were extremely helpful and patient with all the silly mistakes that I made in the beginning. Moreover, they give very detailed reviews on what needs to be changed and why, so you get more clarity with each patch that you submit for review.&lt;/p&gt;

&lt;h3 id=&quot;susequent-patches&quot;&gt;Susequent patches&lt;/h3&gt;
&lt;p&gt;After submitting the first patch, the process of exploring additional bugs/stories and submitting patches became much much easier. The patches that I submitted and got merged can be found &lt;a href=&quot;https://review.opendev.org/#/q/owner:%22Varsha+Verma%22&quot;&gt;here&lt;/a&gt;. Of course, you have to keep reading and exploring, but you kinda get a hang of the sequence of the steps that need to be undertaken with time. The greatest challenge, I believe, lies in the overcoming your initial apprehensions about the project while figuring out where to look for what. In case, the things seem a bit difficult/stuck, you should never shy away from asking questions on the IRC channel. The folks out there are really friendly and irrespective of your timezone, someone will, more or less, always be there to answer your queries and help you out.&lt;/p&gt;

&lt;h3 id=&quot;final-application-and-thereafter&quot;&gt;Final application and thereafter&lt;/h3&gt;
&lt;p&gt;For the final application on the Outreachy portal, you are required to answer a few questions about your past projects, explain why you took up that particular oragnization and give a detailed timeline of how you intend to work during the course of the internship period. 
I continued making contributions after submitting the final application, although, I did slow down a bit.&lt;/p&gt;

&lt;p&gt;My mentors &lt;a href=&quot;https://twitter.com/creepy_owlet&quot;&gt;Dmitry Tantsur&lt;/a&gt; and Ilya Etingof were extremely helpful during this period. They helped me fill up the timeline and also improve my final application for the project. Even while making the contributions, they were highly supportive and helped me make the most out of each patch that I tried to submit. I am also very thankful to the other Ironic community members &lt;a href=&quot;https://twitter.com/elfosardo&quot;&gt;Riccardo Pittau&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/ashinclouds&quot;&gt;Julia Kreger&lt;/a&gt; and the other folks at Ironic for all their support during the contribution process.&lt;/p&gt;

&lt;p&gt;A big advice that I would like to give to all the beginners out there, with a thirst for knowledge and looking for an opportunity to quench their thirst, is that, “YES, YOU CAN!”. Six months ago, I wasn’t even clear on what the term ‘Cloud Computing’ actually meant, yet here we are. :)&lt;/p&gt;

&lt;p&gt;All that is needed is a strong will to learn and an even stronger will to work hard and push yourself. All the factors other than that can very easily be taken care of, given how loving and warm the FOSS communities are to newcomers.&lt;/p&gt;

&lt;p&gt;So, Good Luck and Happy Coding!&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Empowering ironic with Redfish support - &lt;a href=&quot;https://www.youtube.com/watch?v=KxRo5cRpj6k&quot;&gt;https://www.youtube.com/watch?v=KxRo5cRpj6k&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;Openstack Docs: Developer’s Guide - &lt;a href=&quot;https://docs.openstack.org/infra/manual/developers.html&quot;&gt;https://docs.openstack.org/infra/manual/developers.html&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;Adding a release note to one’s patch - &lt;a href=&quot;https://docs.openstack.org/ironic/latest/contributor/faq.html#create-a-new-release-note&quot;&gt;https://docs.openstack.org/ironic/latest/contributor/faq.html#create-a-new-release-note&lt;/a&gt; &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 28 May 2019 13:36:00 +0530</pubDate>
        <link>http://localhost:4000/outreachy/openstack/2019/05/28/outreachy-first-post/</link>
        <guid isPermaLink="true">http://localhost:4000/outreachy/openstack/2019/05/28/outreachy-first-post/</guid>
      </item>
    
  </channel>
</rss>
